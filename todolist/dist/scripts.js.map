{"version":3,"sources":["../src/scripts.js"],"names":["ToDoClass","tasks","JSON","parse","localStorage","getItem","task","isComplete","loadTasks","addEventListeners","setItem","stringify","tasksHtml","reduce","html","index","generateTaskHtml","document","getElementById","innerHTML","addEventListener","event","keyCode","addTask","target","value","taskIndex","preventDefault","splice","newTask","parentDiv","parentElement","classList","add","remove","push","toDo","window"],"mappings":";;;;;;IAAMA,S;AACF,yBAAc;AAAA;;AACV,aAAKC,KAAL,GAAaC,KAAKC,KAAL,CAAWC,aAAaC,OAAb,CAAqB,OAArB,CAAX,CAAb;AACA,YAAI,CAAC,KAAKJ,KAAV,EAAiB;AACb,iBAAKA,KAAL,GAAa,CACT,EAACK,MAAM,eAAP,EAAwBC,YAAY,KAApC,EADS,EAET,EAACD,MAAM,cAAP,EAAuBC,YAAY,IAAnC,EAFS,EAGT,EAACD,MAAM,uBAAP,EAAgCC,YAAY,KAA5C,EAHS,CAAb;AAKH;AACD,aAAKC,SAAL;AACA,aAAKC,iBAAL;AACA;AACH;;;;oCAEW;AAAA;;AACRL,yBAAaM,OAAb,CAAqB,OAArB,EAA8BR,KAAKS,SAAL,CAAe,KAAKV,KAApB,CAA9B;AACA,gBAAIW,YAAY,KAAKX,KAAL,CAAWY,MAAX,CAAkB,UAACC,IAAD,EAAOR,IAAP,EAAaS,KAAb;AAAA,uBAAuBD,QACzD,MAAKE,gBAAL,CAAsBV,IAAtB,EAA4BS,KAA5B,CADkC;AAAA,aAAlB,EACoB,EADpB,CAAhB;AAEAE,qBAASC,cAAT,CAAwB,UAAxB,EAAoCC,SAApC,GAAgDP,SAAhD;AACH;;;4CAEmB;AAAA;;AAChBK,qBAASC,cAAT,CAAwB,SAAxB,EAAmCE,gBAAnC,CAAoD,UAApD,EAAgE,iBAAS;AACrE,oBAAGC,MAAMC,OAAN,KAAkB,EAArB,EAAyB;AACrB,2BAAKC,OAAL,CAAaF,MAAMG,MAAN,CAAaC,KAA1B;AACAJ,0BAAMG,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACH;AACJ,aALD;AAMH;;;yCAEgBnB,I,EAAMS,K,EAAO;AAC1B,wRAI8FA,KAJ9F,8BAI2HT,KAAKC,UAAL,GAAgB,SAAhB,GAA0B,EAJrJ,uHAMsED,KAAKC,UAAL,GAAgB,UAAhB,GAA2B,EANjG,6BAOUD,KAAKA,IAPf,uLAU+DS,KAV/D,uCAUsGA,KAVtG;AAeH;;;yCAEgBA,K,EAAO;AACpB,iBAAKd,KAAL,CAAWc,KAAX,EAAkBR,UAAlB,GAA+B,CAAC,KAAKN,KAAL,CAAWc,KAAX,EAAkBR,UAAlD;AACA,iBAAKC,SAAL;AACH;;;mCACUa,K,EAAOK,S,EAAW;AACzBL,kBAAMM,cAAN;AACA,iBAAK1B,KAAL,CAAW2B,MAAX,CAAkBF,SAAlB,EAA6B,CAA7B;AACA,iBAAKlB,SAAL;AACH;;;uCAEc;AACX,gBAAIgB,SAASP,SAASC,cAAT,CAAwB,SAAxB,CAAb;AACA,iBAAKK,OAAL,CAAaC,OAAOC,KAApB;AACAD,mBAAOC,KAAP,GAAe,EAAf;AACH;;;gCACOnB,I,EAAM;AACV,gBAAIuB,UAAU;AACVvB,0BADU;AAEVC,4BAAY;AAFF,aAAd;AAIA,gBAAIuB,YAAYb,SAASC,cAAT,CAAwB,SAAxB,EAAmCa,aAAnD;AACA,gBAAIzB,SAAS,EAAb,EAAiB;AACbwB,0BAAUE,SAAV,CAAoBC,GAApB,CAAwB,WAAxB;AACH,aAFD,MAEO;AACHH,0BAAUE,SAAV,CAAoBE,MAApB,CAA2B,WAA3B;AACA,qBAAKjC,KAAL,CAAWkC,IAAX,CAAgBN,OAAhB;AACA,qBAAKrB,SAAL;AACH;AACJ;;;;;;AAEL,IAAI4B,aAAJ;AACAC,OAAOjB,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AAClCgB,WAAO,IAAIpC,SAAJ,EAAP;AACH,CAFD","file":"scripts.js","sourcesContent":["class ToDoClass {\n    constructor() {\n        this.tasks = JSON.parse(localStorage.getItem('TASKS'));\n        if (!this.tasks) {\n            this.tasks = [\n                {task: 'Go to Dentist', isComplete: false},\n                {task: 'Do Gardening', isComplete: true},\n                {task: 'Renew Library Account', isComplete: false},\n            ];\n        }\n        this.loadTasks();\n        this.addEventListeners();\n        debugger;\n    }\n\n    loadTasks() {\n        localStorage.setItem('TASKS', JSON.stringify(this.tasks));\n        let tasksHtml = this.tasks.reduce((html, task, index) => html +=\n        this.generateTaskHtml(task, index), '');\n        document.getElementById('taskList').innerHTML = tasksHtml;\n    }\n\n    addEventListeners() {\n        document.getElementById('addTask').addEventListener('keypress', event => {\n            if(event.keyCode === 13) {\n                this.addTask(event.target.value);\n                event.target.value = '';\n            }\n        })\n    }\n\n    generateTaskHtml(task, index) {\n        return `\n          <li class=\"list-group-item checkbox\">\n            <div class=\"row\">\n              <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 checkbox\">\n                <label><input id=\"toggleTaskStatus\" type=\"checkbox\" onchange=\"toDo.toggleTaskStatus(${index})\" value=\"\" class=\"\" ${task.isComplete?'checked':''}></label>\n              </div>\n              <div class=\"col-md-10 col-xs-10 col-lg-10 col-sm-10 task-text ${task.isComplete?'complete':''}\">\n                ${task.task}\n              </div>\n              <div class=\"col-md-1 col-xs-1 col-lg-1 col-sm-1 delete-icon-area\">\n                <a class=\"\" href=\"/\" onClick=\"toDo.deleteTask(event, ${index})\"><i id=\"deleteTask\" data-id=\"${index}\" class=\"delete-icon glyphicon glyphicon-trash\"></i></a>\n              </div>\n            </div>\n          </li>\n        `;\n    }\n\n    toggleTaskStatus(index) {\n        this.tasks[index].isComplete = !this.tasks[index].isComplete;\n        this.loadTasks();\n    }\n    deleteTask(event, taskIndex) {\n        event.preventDefault();\n        this.tasks.splice(taskIndex, 1);\n        this.loadTasks();\n    }\n\n    addTaskClick() {\n        let target = document.getElementById('addTask');\n        this.addTask(target.value);\n        target.value = \"\";\n    }\n    addTask(task) {\n        let newTask = {\n            task,\n            isComplete: false,\n        };\n        let parentDiv = document.getElementById('addTask').parentElement;\n        if (task === '') {\n            parentDiv.classList.add('has-error');\n        } else {\n            parentDiv.classList.remove('has-error');\n            this.tasks.push(newTask);\n            this.loadTasks();\n        }\n    }\n}\nlet toDo;\nwindow.addEventListener('load', () => {\n    toDo = new ToDoClass();\n})"]}